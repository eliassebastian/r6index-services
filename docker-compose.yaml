version: '3.9'

services:
  reverse:
    container_name: reverse
    image: nginx:latest
    restart: always
    depends_on:
      - api_service
      # - auth_service
    ports: 
      - 80:80
    networks:
      - backend
    volumes:
      - ./proxy/nginx.conf:/etc/nginx/nginx.conf

  meilisearch:
    container_name: meilisearch
    image: getmeili/meilisearch:v0.30
    # ports:
    #   - "7700"
    volumes:
      - /var/local/meilisearch:/meili_data
    restart: unless-stopped
    environment:
      - MEILI_MASTER_KEY=${MEILI_MASTER_KEY}
    networks:
      - backend

  rabbitmq:
    hostname: rabbitmq
    container_name: rabbitmq
    image: arm64v8/rabbitmq:3.11.5-management
    # ports:
    #   - 5672:5672
    #   - 15672:15672
    volumes:
      - /var/local/rabbitmq:/var/lib/rabbitmq/mnesia/
    networks:
      - backend
  
  redis:
    container_name: redis
    image: arm64v8/redis
    environment:
      - REDIS_DISABLE_COMMANDS=FLUSHDB,FLUSHALL,CONFIG
      - ALLOW_EMPTY_PASSWORD=yes
    # ports:
    #   - 6379:6379
    volumes:
      - ./redis/redis.conf:/usr/local/etc/redis/redis.conf
    command: redis-server /usr/local/etc/redis/redis.conf
    networks:
      - backend
  
  auth_service:
    container_name: auth_service
    image: r6indexauth:latest
    restart: always 
    environment:
      - UBISOFT_USERNAME=${UBISOFT_USERNAME}
      - UBISOFT_PASS=${UBISOFT_PASS}
      - UBISOFT_SESSIONREFRESH=${UBISOFT_SESSIONREFRESH}
      - RABBITMQ_URL=${RABBITMQ_URL}
    depends_on:
      - rabbitmq
    networks:
      - backend

  api_service: 
    container_name: api_service
    image: r6indexapi:latest
    restart: always 
    environment:
      - RABBITMQ_URL=${RABBITMQ_URL}
      - MEILI_API_KEY=${MEILI_API_KEY}
      - MEILI_URL=${MEILI_URL}
      - REDIS_URL=${REDIS_URL}
      - REDIS_PASSWORD=${REDIS_PASSWORD}
      - API_URL=${API_URL}
    # ports:
    #   - "8080"
    depends_on:
      - meilisearch
      - rabbitmq
      - redis
      - auth_service
    networks:
      - backend

networks:
  backend:
    driver: bridge
  # frontend:
  #   external: true
